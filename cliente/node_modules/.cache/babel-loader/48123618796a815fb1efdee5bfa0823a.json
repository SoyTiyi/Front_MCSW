{"ast":null,"code":"var _jsxFileName = \"/home/natalia/Documentos/MCSW/Tareas/Sem03/Front_MCSW/cliente/src/component/login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { Container, Row, Buttons, Button, Title } from './StyleLogin';\nimport { useHistory } from \"react-router-dom\";\nimport { navigate } from '@reach/router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  const url = 'http://localhost:3000/login';\n  const history = useHistory();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const routeChange = () => {\n    let path = '/register';\n    history.push(path);\n  };\n\n  const postLogin = () => {\n    var data = new FormData();\n    data.append('usuario', username);\n    data.append('passwd', password);\n    const options = {\n      method: 'post',\n      credentials: 'include',\n      headers: {\n        'Content-type': 'application/x-www-form-urlencoded; charset=UTF-8'\n      },\n      body: `username=${password}&passwd=${password}`\n    };\n    fetch(url, options).then(response => {\n      if (!response.ok) {\n        console.log(response);\n\n        if (response.status === 404) {\n          alert('Email not found, please retry');\n        }\n\n        if (response.status === 401) {\n          alert('Email and password do not match, please retry');\n        }\n      }\n\n      return response;\n    }).then(response => response.json()).then(data => {\n      if (data.success) {\n        document.cookie = 'signedin=true';\n        navigate('/private-area');\n      }\n    }); // contacto con el servidor de react\n\n    /*var data = new FormData();\n    data.append('usuario', username);\n    data.append('passwd', password);\n     axios.post('http://localhost:8001/MiBanco/login', data)\n    .then(response => {\n      console.log(response)\n       if(response.data){\n        console.log(response.data)\n        let rol = response.data['role'].trim();\n        let token = response.data['token'];\n         if(rol === 'admin' || rol === 'auditor') {\n          let path = '/admin';\n          localStorage.setItem(\"username\", username);\n          history.push(path);\n        }\n         else if (rol === 'cliente'){\n          let path = '/user';\n          window.localStorage.setItem(\"username\", username);\n          window.localStorage.setItem(\"tipo\", rol);\n          history.push(path);\n        }\n       }\n    })\n    .catch(error => `Error: ${error}`);*/\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Username \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        onChange: event => setUsername(event.target.value),\n        style: {\n          width: \"100%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Password \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"pasword\",\n        onChange: event => setPassword(event.target.value),\n        style: {\n          width: \"100%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: postLogin,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: routeChange,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"JGOwcazR1Xnza9feZjS3jiytLvc=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/natalia/Documentos/MCSW/Tareas/Sem03/Front_MCSW/cliente/src/component/login/Login.js"],"names":["React","useState","axios","Container","Row","Buttons","Button","Title","useHistory","navigate","Login","props","url","history","username","setUsername","password","setPassword","routeChange","path","push","postLogin","data","FormData","append","options","method","credentials","headers","body","fetch","then","response","ok","console","log","status","alert","json","success","document","cookie","event","target","value","width"],"mappings":"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","sourcesContent":["import React , {useState} from 'react';\nimport axios from 'axios';\nimport { Container, Row, Buttons, Button, Title } from './StyleLogin';\nimport { useHistory } from \"react-router-dom\";\nimport { navigate } from '@reach/router'\n\nconst Login = (props) => {\n\n    const url = 'http://localhost:3000/login';\n\n    const history = useHistory();\n\n    const[username, setUsername] = useState(\"\");\n    const[password, setPassword] = useState(\"\");\n\n    const routeChange = () => {\n        let path = '/register';\n        history.push(path);\n    }\n    const postLogin = () => {\n\n      var data = new FormData();\n      data.append('usuario', username);\n      data.append('passwd', password);\n\n      const options = {\n        method: 'post',\n        credentials: 'include',\n        headers: {\n          'Content-type': 'application/x-www-form-urlencoded; charset=UTF-8'\n        },\n        body: `username=${password}&passwd=${password}`\n      }\n\n      fetch(url, options)\n      .then(response => {\n        if (!response.ok) {\n          console.log(response)\n          if (response.status === 404) {\n            alert('Email not found, please retry')\n          }\n          if (response.status === 401) {\n            alert('Email and password do not match, please retry')\n          }\n        }\n        return response\n      })\n      .then(response => response.json())\n      .then(data => {\n        if (data.success) {\n          document.cookie = 'signedin=true'\n          navigate('/private-area')\n        }\n      })\n\n      // contacto con el servidor de react\n      /*var data = new FormData();\n      data.append('usuario', username);\n      data.append('passwd', password);\n\n      axios.post('http://localhost:8001/MiBanco/login', data)\n      .then(response => {\n        console.log(response)\n\n        if(response.data){\n          console.log(response.data)\n          let rol = response.data['role'].trim();\n          let token = response.data['token'];\n\n          if(rol === 'admin' || rol === 'auditor') {\n            let path = '/admin';\n            localStorage.setItem(\"username\", username);\n            history.push(path);\n          }\n\n          else if (rol === 'cliente'){\n            let path = '/user';\n            window.localStorage.setItem(\"username\", username);\n            window.localStorage.setItem(\"tipo\", rol);\n            history.push(path);\n          }\n\n        }\n      })\n      .catch(error => `Error: ${error}`);*/\n    }\n\n    return (\n        <Container>\n          <Title>\n              <h1>Login</h1>\n          </Title>\n          <Row>\n              <label><b>Username </b></label>\n              <br /><br />\n              <input type=\"text\" name=\"username\" onChange={event => setUsername(event.target.value)}  style={{ width:\"100%\" }}/>\n          </Row>\n          <Row>\n              <label><b>Password </b></label>\n              <br /><br />\n              <input type=\"password\" name=\"pasword\" onChange={event => setPassword(event.target.value)}  style={{ width:\"100%\" }}/>\n          </Row>\n          <Buttons>\n              <Button onClick={postLogin}>Login</Button>\n              <Button onClick={routeChange}>Register</Button>\n          </Buttons>\n        </Container>\n    );\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}