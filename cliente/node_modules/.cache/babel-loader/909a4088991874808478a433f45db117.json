{"ast":null,"code":"var _jsxFileName = \"/home/natalia/Documentos/MCSW/Tareas/Sem03/Front_MCSW/cliente/src/component/login/Login.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { Container, Row, Buttons, Button, Title } from './StyleLogin';\nimport { useHistory } from \"react-router-dom\";\nimport { navigate } from '@reach/router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  /*const url = 'http://localhost:3000/login';\n   const history = useHistory();\n   const[username, setUsername] = useState(\"\");\n  const[password, setPassword] = useState(\"\");\n   const routeChange = () => {\n      let path = '/register';\n      history.push(path);\n  }\n  const postLogin = () => {\n     var data = new FormData();\n    data.append('usuario', username);\n    data.append('passwd', password);\n     const options = {\n      method: 'post',\n      credentials: 'include',\n      headers: {\n        'Content-type': 'application/x-www-form-urlencoded; charset=UTF-8'\n      },\n      body: `username=${password}&passwd=${password}`\n    }\n     fetch(url, options)\n    .then(response => {\n      if (!response.ok) {\n        console.log(response)\n        if (response.status === 404) {\n          alert('Email not found, please retry')\n        }\n        if (response.status === 401) {\n          alert('Email and password do not match, please retry')\n        }\n      }\n      return response\n    })\n    .then(response => response.json())\n    .then(data => {\n      if (data.success) {\n        document.cookie = 'signedin=true'\n        navigate('/private-area')\n      }\n    })*/\n  data.append('usuario', username);\n  data.append('passwd', password);\n  axios.post('http://localhost:3000/login', data).then(response => {\n    console.log(response);\n\n    if (response.data) {\n      console.log(response.data);\n      let rol = response.data['role'].trim();\n      let token = response.data['token'];\n\n      if (rol === 'admin' || rol === 'auditor') {\n        let path = '/admin';\n        localStorage.setItem(\"username\", username);\n        history.push(path);\n      } else if (rol === 'cliente') {\n        let path = '/user';\n        window.localStorage.setItem(\"username\", username);\n        window.localStorage.setItem(\"tipo\", rol);\n        history.push(path);\n      }\n    }\n  }).catch(error => `Error: ${error}`); // contacto con el servidor de react\n\n  /*var data = new FormData();\n  data.append('usuario', username);\n  data.append('passwd', password);\n   axios.post('http://localhost:8001/MiBanco/login', data)\n  .then(response => {\n    console.log(response)\n     if(response.data){\n      console.log(response.data)\n      let rol = response.data['role'].trim();\n      let token = response.data['token'];\n       if(rol === 'admin' || rol === 'auditor') {\n        let path = '/admin';\n        localStorage.setItem(\"username\", username);\n        history.push(path);\n      }\n       else if (rol === 'cliente'){\n        let path = '/user';\n        window.localStorage.setItem(\"username\", username);\n        window.localStorage.setItem(\"tipo\", rol);\n        history.push(path);\n      }\n     }\n  })\n  .catch(error => `Error: ${error}`);*/\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Username \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        onChange: event => setUsername(event.target.value),\n        style: {\n          width: \"100%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Password \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"pasword\",\n        onChange: event => setPassword(event.target.value),\n        style: {\n          width: \"100%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: postLogin,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: routeChange,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/natalia/Documentos/MCSW/Tareas/Sem03/Front_MCSW/cliente/src/component/login/Login.js"],"names":["React","useState","axios","Container","Row","Buttons","Button","Title","useHistory","navigate","Login","props","data","append","username","password","post","then","response","console","log","rol","trim","token","path","localStorage","setItem","history","push","window","catch","error","event","setUsername","target","value","width","setPassword","postLogin","routeChange"],"mappings":"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","sourcesContent":["import React , {useState} from 'react';\nimport axios from 'axios';\nimport { Container, Row, Buttons, Button, Title } from './StyleLogin';\nimport { useHistory } from \"react-router-dom\";\nimport { navigate } from '@reach/router'\n\nconst Login = (props) => {\n\n    /*const url = 'http://localhost:3000/login';\n\n    const history = useHistory();\n\n    const[username, setUsername] = useState(\"\");\n    const[password, setPassword] = useState(\"\");\n\n    const routeChange = () => {\n        let path = '/register';\n        history.push(path);\n    }\n    const postLogin = () => {\n\n      var data = new FormData();\n      data.append('usuario', username);\n      data.append('passwd', password);\n\n      const options = {\n        method: 'post',\n        credentials: 'include',\n        headers: {\n          'Content-type': 'application/x-www-form-urlencoded; charset=UTF-8'\n        },\n        body: `username=${password}&passwd=${password}`\n      }\n\n      fetch(url, options)\n      .then(response => {\n        if (!response.ok) {\n          console.log(response)\n          if (response.status === 404) {\n            alert('Email not found, please retry')\n          }\n          if (response.status === 401) {\n            alert('Email and password do not match, please retry')\n          }\n        }\n        return response\n      })\n      .then(response => response.json())\n      .then(data => {\n        if (data.success) {\n          document.cookie = 'signedin=true'\n          navigate('/private-area')\n        }\n      })*/\n\n      data.append('usuario', username);\n      data.append('passwd', password);\n\n      axios.post('http://localhost:3000/login', data)\n      .then(response => {\n        console.log(response)\n\n        if(response.data){\n          console.log(response.data)\n          let rol = response.data['role'].trim();\n          let token = response.data['token'];\n\n          if(rol === 'admin' || rol === 'auditor') {\n            let path = '/admin';\n            localStorage.setItem(\"username\", username);\n            history.push(path);\n          }\n\n          else if (rol === 'cliente'){\n            let path = '/user';\n            window.localStorage.setItem(\"username\", username);\n            window.localStorage.setItem(\"tipo\", rol);\n            history.push(path);\n          }\n\n        }\n      })\n      .catch(error => `Error: ${error}`);\n\n      // contacto con el servidor de react\n      /*var data = new FormData();\n      data.append('usuario', username);\n      data.append('passwd', password);\n\n      axios.post('http://localhost:8001/MiBanco/login', data)\n      .then(response => {\n        console.log(response)\n\n        if(response.data){\n          console.log(response.data)\n          let rol = response.data['role'].trim();\n          let token = response.data['token'];\n\n          if(rol === 'admin' || rol === 'auditor') {\n            let path = '/admin';\n            localStorage.setItem(\"username\", username);\n            history.push(path);\n          }\n\n          else if (rol === 'cliente'){\n            let path = '/user';\n            window.localStorage.setItem(\"username\", username);\n            window.localStorage.setItem(\"tipo\", rol);\n            history.push(path);\n          }\n\n        }\n      })\n      .catch(error => `Error: ${error}`);*/\n    \n\n    return (\n        <Container>\n          <Title>\n              <h1>Login</h1>\n          </Title>\n          <Row>\n              <label><b>Username </b></label>\n              <br /><br />\n              <input type=\"text\" name=\"username\" onChange={event => setUsername(event.target.value)}  style={{ width:\"100%\" }}/>\n          </Row>\n          <Row>\n              <label><b>Password </b></label>\n              <br /><br />\n              <input type=\"password\" name=\"pasword\" onChange={event => setPassword(event.target.value)}  style={{ width:\"100%\" }}/>\n          </Row>\n          <Buttons>\n              <Button onClick={postLogin}>Login</Button>\n              <Button onClick={routeChange}>Register</Button>\n          </Buttons>\n        </Container>\n    );\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}