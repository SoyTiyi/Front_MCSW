{"ast":null,"code":"import axios from \"axios\";\nimport Cookies from 'js-cookie';\nconst API_URL = \"http://localhost:3000\";\n\nclass AuthService {\n  login(username, password) {\n    /*return axios\n    .post(API_URL + \"/login\", { username, password })\n    .then((response) => {\n    if (response.data.accessToken) {\n    localStorage.setItem(\"user\", JSON.stringify(response.data));\n    }\n    return response.data;\n    });*/\n    const options = {\n      method: 'post',\n      credentials: 'include',\n      headers: {\n        'Content-type': 'application/x-www-form-urlencoded; charset=UTF-8'\n      },\n      body: `username=${username}&passwd=${password}`\n    };\n    return dispatch => {\n      fetch(API_URL + \"/login\", options).then(response => {\n        if (!response.ok) {\n          dispatch(loginError(\"Errrorrrrrrrrrrrr\"));\n        }\n      }).then(response => response.json()).then(data => {\n        if (data.success) {\n          Cookies.set('signedin', true, {\n            expires: 1\n          });\n          dispatch(\"yeahhhhhhhh\");\n        }\n      });\n    };\n  }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n  }\n\n  register(username, email, password) {\n    return axios.post(API_URL + \"signup\", {\n      username,\n      email,\n      password\n    });\n  }\n\n}\n\nexport default new AuthService();","map":{"version":3,"sources":["/home/natalia/Documentos/MCSW/Tareas/Sem03/Front_MCSW/cliente/src/services/auth/AuthService.js"],"names":["axios","Cookies","API_URL","AuthService","login","username","password","options","method","credentials","headers","body","dispatch","fetch","then","response","ok","loginError","json","data","success","set","expires","logout","localStorage","removeItem","register","email","post"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,MAAMC,OAAO,GAAG,uBAAhB;;AAEA,MAAMC,WAAN,CAAkB;AAEhBC,EAAAA,KAAK,CAACC,QAAD,EAAWC,QAAX,EAAqB;AACxB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AAGE,UAAMC,OAAO,GAAG;AACdC,MAAAA,MAAM,EAAE,MADM;AAEdC,MAAAA,WAAW,EAAE,SAFC;AAGdC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAHK;AAMdC,MAAAA,IAAI,EAAG,YAAWN,QAAS,WAAUC,QAAS;AANhC,KAAhB;AASA,WAAOM,QAAQ,IAAI;AACpBC,MAAAA,KAAK,CAACX,OAAO,GAAC,QAAT,EAAmBK,OAAnB,CAAL,CACEO,IADF,CACOC,QAAQ,IAAI;AAChB,YAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AACfJ,UAAAA,QAAQ,CAACK,UAAU,CAAC,mBAAD,CAAX,CAAR;AAGF;AACF,OAPF,EAQEH,IARF,CAQOC,QAAQ,IAAIA,QAAQ,CAACG,IAAT,EARnB,EASEJ,IATF,CASOK,IAAI,IAAI;AACZ,YAAIA,IAAI,CAACC,OAAT,EAAkB;AAEhBnB,UAAAA,OAAO,CAACoB,GAAR,CAAY,UAAZ,EAAwB,IAAxB,EAA8B;AAAEC,YAAAA,OAAO,EAAE;AAAX,WAA9B;AAEAV,UAAAA,QAAQ,CAAC,aAAD,CAAR;AAED;AACF,OAjBF;AAiBK,KAlBJ;AAoBD;;AAIDW,EAAAA,MAAM,GAAG;AACPC,IAAAA,YAAY,CAACC,UAAb,CAAwB,MAAxB;AACD;;AAEDC,EAAAA,QAAQ,CAACrB,QAAD,EAAWsB,KAAX,EAAkBrB,QAAlB,EAA4B;AAClC,WAAON,KAAK,CAAC4B,IAAN,CAAW1B,OAAO,GAAG,QAArB,EAA+B;AACpCG,MAAAA,QADoC;AAEpCsB,MAAAA,KAFoC;AAGpCrB,MAAAA;AAHoC,KAA/B,CAAP;AAKD;;AAxDiB;;AA2DlB,eAAe,IAAIH,WAAJ,EAAf","sourcesContent":["import axios from \"axios\";\nimport Cookies from 'js-cookie';\n\nconst API_URL = \"http://localhost:3000\";\n\nclass AuthService {\n\n  login(username, password) {\n    /*return axios\n    .post(API_URL + \"/login\", { username, password })\n    .then((response) => {\n    if (response.data.accessToken) {\n    localStorage.setItem(\"user\", JSON.stringify(response.data));\n  }\n\n  return response.data;\n});*/\n\n  const options = {\n    method: 'post',\n    credentials: 'include',\n    headers: {\n      'Content-type': 'application/x-www-form-urlencoded; charset=UTF-8'\n    },\n    body: `username=${username}&passwd=${password}`\n  }\n\n  return dispatch => {\n fetch(API_URL+\"/login\", options)\n  .then(response => {\n    if (!response.ok) {\n       dispatch(loginError(\"Errrorrrrrrrrrrrr\"))\n\n\n    }\n  })\n  .then(response => response.json())\n  .then(data => {\n    if (data.success) {\n\n      Cookies.set('signedin', true, { expires: 1 });\n\n      dispatch(\"yeahhhhhhhh\")\n\n    }\n  });}\n\n}\n\n\n\nlogout() {\n  localStorage.removeItem(\"user\");\n}\n\nregister(username, email, password) {\n  return axios.post(API_URL + \"signup\", {\n    username,\n    email,\n    password,\n  });\n}\n}\n\nexport default new AuthService();\n"]},"metadata":{},"sourceType":"module"}