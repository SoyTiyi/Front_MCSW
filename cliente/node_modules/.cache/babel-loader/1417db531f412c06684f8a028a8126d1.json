{"ast":null,"code":"var _jsxFileName = \"/home/natalia/Documentos/MCSW/Tareas/Sem03/Front_MCSW/cliente/src/component/login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport { Container, Row, Buttons, Button, Title } from './StyleLogin';\nimport { useHistory } from \"react-router-dom\";\nimport { UserContext } from './../../hooks/UserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Login = props => {\n  _s();\n\n  const {\n    setUser\n  } = useContext(UserContext);\n  const url = 'http://localhost:3000';\n  const history = useHistory();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const routeChange = () => {\n    let path = '/register';\n    history.push(path);\n  };\n\n  const postLogin = () => {\n    const options = {\n      method: 'post',\n      credentials: 'include',\n      headers: {\n        'Content-type': 'application/x-www-form-urlencoded; charset=UTF-8'\n      },\n      body: `username=${username}&passwd=${password}`\n    };\n    fetch(url + \"/login\", options).then(response => {\n      if (!response.ok) {\n        if (response.status === 404) {\n          alert('User not found, please retry');\n        }\n\n        if (response.status === 401) {\n          alert('Invalid credentials');\n        }\n      }\n\n      return response;\n    }).then(response => response.json()).then(data => {\n      if (data.success) {\n        setUser(data.success);\n        let rol = data.success.trim();\n        let path = '';\n\n        if (rol === 'admin' || rol === 'auditor') {\n          path = rol;\n        } else if (rol === 'cliente') {\n          path = 'user';\n        }\n\n        history.push('/' + path);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Username \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        onChange: event => setUsername(event.target.value),\n        style: {\n          width: \"100%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Password \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"pasword\",\n        onChange: event => setPassword(event.target.value),\n        style: {\n          width: \"100%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: postLogin,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: routeChange,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"iuGA32IjIZdfYje9NrfVuj2DceY=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/natalia/Documentos/MCSW/Tareas/Sem03/Front_MCSW/cliente/src/component/login/Login.js"],"names":["React","useState","useContext","Container","Row","Buttons","Button","Title","useHistory","UserContext","Login","props","setUser","url","history","username","setUsername","password","setPassword","routeChange","path","push","postLogin","options","method","credentials","headers","body","fetch","then","response","ok","status","alert","json","data","success","rol","trim","event","target","value","width"],"mappings":"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","sourcesContent":["import React , { useState, useContext } from 'react';\nimport { Container, Row, Buttons, Button, Title } from './StyleLogin';\nimport { useHistory } from \"react-router-dom\";\nimport { UserContext } from './../../hooks/UserContext';\n\n\nexport const Login = (props) => {\n\n  const { setUser } = useContext(UserContext);\n\n\n  const url = 'http://localhost:3000';\n\n  const history = useHistory();\n\n  const[username, setUsername] = useState(\"\");\n  const[password, setPassword] = useState(\"\");\n\n  const routeChange = () => {\n    let path = '/register';\n    history.push(path);\n  }\n\n\n  const postLogin = () => {\n\n    const options = {\n      method: 'post',\n      credentials: 'include',\n      headers: {\n        'Content-type': 'application/x-www-form-urlencoded; charset=UTF-8'\n      },\n      body: `username=${username}&passwd=${password}`\n    }\n\n    fetch(url+\"/login\", options)\n    .then(response => {\n      if (!response.ok) {\n        if (response.status === 404) {\n          alert('User not found, please retry')\n        }\n        if (response.status === 401) {\n          alert('Invalid credentials')\n\n        }\n      }\n      return response\n    })\n    .then(response => response.json())\n    .then(data => {\n      if (data.success) {\n\n        setUser(data.success);\n\n        let rol = data.success.trim();\n\n        let path = '';\n\n        if(rol === 'admin' || rol === 'auditor') {\n          path = rol;\n        }\n        else if(rol === 'cliente'){\n          path = 'user';\n        }\n\n        history.push('/'+path);\n      }\n    })\n  }\n\n  return (\n    <Container>\n    <Title>\n    <h1>Login</h1>\n    </Title>\n    <Row>\n    <label><b>Username </b></label>\n    <br /><br />\n    <input type=\"text\" name=\"username\" onChange={event => setUsername(event.target.value)}  style={{ width:\"100%\" }}/>\n    </Row>\n    <Row>\n    <label><b>Password </b></label>\n    <br /><br />\n    <input type=\"password\" name=\"pasword\" onChange={event => setPassword(event.target.value)}  style={{ width:\"100%\" }}/>\n    </Row>\n    <Buttons>\n    <Button onClick={postLogin}>Login</Button>\n    <Button onClick={routeChange}>Register</Button>\n    </Buttons>\n    </Container>\n  );\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}