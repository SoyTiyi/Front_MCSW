{"ast":null,"code":"import axios from \"axios\";\nimport Cookies from 'js-cookie';\nconst API_URL = \"http://localhost:3000\";\n\nclass AuthService {\n  login(username, password) {\n    const options = {\n      method: 'post',\n      credentials: 'include',\n      headers: {\n        'Content-type': 'application/x-www-form-urlencoded; charset=UTF-8'\n      },\n      body: `username=${username}&passwd=${password}`\n    };\n    return fetch(API_URL + \"/login\", options).then(response => {\n      if (!response.ok) {\n        alert(\"Errrorrrrrrrrrrrr\");\n      }\n    }).then(response => response.json()).then(data => {\n      if (data.success) {\n        Cookies.set('signedin', true, {\n          expires: 1\n        });\n        alert(\"yeahhhhhhhh\");\n      }\n    });\n  }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n  }\n\n  register(username, email, password) {\n    return axios.post(API_URL + \"signup\", {\n      username,\n      email,\n      password\n    });\n  }\n\n}\n\nexport default new AuthService();","map":{"version":3,"sources":["/home/natalia/Documentos/MCSW/Tareas/Sem03/Front_MCSW/cliente/src/services/auth/AuthService.js"],"names":["axios","Cookies","API_URL","AuthService","login","username","password","options","method","credentials","headers","body","fetch","then","response","ok","alert","json","data","success","set","expires","logout","localStorage","removeItem","register","email","post"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,MAAMC,OAAO,GAAG,uBAAhB;;AAEA,MAAMC,WAAN,CAAkB;AAEfC,EAAAA,KAAK,CAACC,QAAD,EAAWC,QAAX,EAAqB;AAEzB,UAAMC,OAAO,GAAG;AACdC,MAAAA,MAAM,EAAE,MADM;AAEdC,MAAAA,WAAW,EAAE,SAFC;AAGdC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAHK;AAMdC,MAAAA,IAAI,EAAG,YAAWN,QAAS,WAAUC,QAAS;AANhC,KAAhB;AASA,WAAOM,KAAK,CAACV,OAAO,GAAC,QAAT,EAAmBK,OAAnB,CAAL,CACJM,IADI,CACCC,QAAQ,IAAI;AAChB,UAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AAChBC,QAAAA,KAAK,CAAC,mBAAD,CAAL;AAGD;AACF,KAPI,EAQJH,IARI,CAQCC,QAAQ,IAAIA,QAAQ,CAACG,IAAT,EARb,EASJJ,IATI,CASCK,IAAI,IAAI;AACZ,UAAIA,IAAI,CAACC,OAAT,EAAkB;AAEhBlB,QAAAA,OAAO,CAACmB,GAAR,CAAY,UAAZ,EAAwB,IAAxB,EAA8B;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAA9B;AAEAL,QAAAA,KAAK,CAAC,aAAD,CAAL;AAED;AACF,KAjBI,CAAP;AAmBC;;AAIDM,EAAAA,MAAM,GAAG;AACPC,IAAAA,YAAY,CAACC,UAAb,CAAwB,MAAxB;AACD;;AAEDC,EAAAA,QAAQ,CAACpB,QAAD,EAAWqB,KAAX,EAAkBpB,QAAlB,EAA4B;AAClC,WAAON,KAAK,CAAC2B,IAAN,CAAWzB,OAAO,GAAG,QAArB,EAA+B;AACpCG,MAAAA,QADoC;AAEpCqB,MAAAA,KAFoC;AAGpCpB,MAAAA;AAHoC,KAA/B,CAAP;AAKD;;AA9Ca;;AAiDhB,eAAe,IAAIH,WAAJ,EAAf","sourcesContent":["import axios from \"axios\";\nimport Cookies from 'js-cookie';\n\nconst API_URL = \"http://localhost:3000\";\n\nclass AuthService {\n\n   login(username, password) {\n\n    const options = {\n      method: 'post',\n      credentials: 'include',\n      headers: {\n        'Content-type': 'application/x-www-form-urlencoded; charset=UTF-8'\n      },\n      body: `username=${username}&passwd=${password}`\n    }\n\n    return fetch(API_URL+\"/login\", options)\n      .then(response => {\n        if (!response.ok) {\n          alert(\"Errrorrrrrrrrrrrr\")\n\n\n        }\n      })\n      .then(response => response.json())\n      .then(data => {\n        if (data.success) {\n\n          Cookies.set('signedin', true, { expires: 1 });\n\n          alert(\"yeahhhhhhhh\")\n\n        }\n      });\n\n    }\n\n\n\n    logout() {\n      localStorage.removeItem(\"user\");\n    }\n\n    register(username, email, password) {\n      return axios.post(API_URL + \"signup\", {\n        username,\n        email,\n        password,\n      });\n    }\n  }\n\n  export default new AuthService();\n"]},"metadata":{},"sourceType":"module"}