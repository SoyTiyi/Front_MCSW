{"ast":null,"code":"var _jsxFileName = \"/home/natalia/Documentos/MCSW/Tareas/Sem03/Front_MCSW/cliente/src/private/PrivateRoute.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { UserContext } from './../hooks/UserContext';\nimport Loading from './../component/Loading/Loading';\nimport Cookies from 'js-cookie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = 'http://localhost:3000';\nexport default function PrivateRoute(props) {\n  _s();\n\n  const verifyUser = () => {\n    const options = {\n      method: 'post',\n      credentials: 'include',\n      headers: {\n        'Content-type': 'application/x-www-form-urlencoded; charset=UTF-8'\n      },\n      body: `jwt=${Cookies.get('jwt')}`\n    };\n    fetch(url + \"/verifyUser\", options).then(response => {\n      if (!response.ok) {\n        return false;\n      }\n\n      return response;\n    }).then(response => response.json()).then(data => {\n      if (data.valid) {\n        return true;\n      }\n    });\n  };\n\n  const {\n    user,\n    isLoading\n  } = useContext(UserContext);\n  console.log(user, isLoading);\n  const {\n    component: Component,\n    ...rest\n  } = props;\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 14\n    }, this);\n  }\n\n  if (user) {\n    return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n      render: props => /*#__PURE__*/_jsxDEV(Component, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 53\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 14\n    }, this);\n  }\n}\n\n_s(PrivateRoute, \"sJWb3nrXvXTKnB6nGn+aAi3RXR4=\");\n\n_c = PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/home/natalia/Documentos/MCSW/Tareas/Sem03/Front_MCSW/cliente/src/private/PrivateRoute.js"],"names":["React","useContext","Route","Redirect","UserContext","Loading","Cookies","url","PrivateRoute","props","verifyUser","options","method","credentials","headers","body","get","fetch","then","response","ok","json","data","valid","user","isLoading","console","log","component","Component","rest"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,OAAOC,OAAP,MAAoB,gCAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,GAAG,GAAG,uBAAZ;AAGA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAE1C,QAAMC,UAAU,GAAG,MAAO;AACxB,UAAMC,OAAO,GAAG;AACdC,MAAAA,MAAM,EAAE,MADM;AAEdC,MAAAA,WAAW,EAAE,SAFC;AAGdC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAHK;AAMdC,MAAAA,IAAI,EAAG,OAAMT,OAAO,CAACU,GAAR,CAAY,KAAZ,CAAmB;AANlB,KAAhB;AASAC,IAAAA,KAAK,CAACV,GAAG,GAAC,aAAL,EAAoBI,OAApB,CAAL,CACCO,IADD,CACMC,QAAQ,IAAI;AAChB,UAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AAEhB,eAAO,KAAP;AACD;;AACD,aAAOD,QAAP;AACD,KAPD,EAQCD,IARD,CAQMC,QAAQ,IAAIA,QAAQ,CAACE,IAAT,EARlB,EASCH,IATD,CASMI,IAAI,IAAI;AACZ,UAAIA,IAAI,CAACC,KAAT,EAAgB;AACd,eAAO,IAAP;AACD;AACF,KAbD;AAcD,GAxBD;;AA2BA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAsBxB,UAAU,CAACG,WAAD,CAAtC;AAIAsB,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAAkBC,SAAlB;AAEA,QAAM;AAAEG,IAAAA,SAAS,EAAEC,SAAb;AACJ,OAAGC;AADC,MACQrB,KADd;;AAGE,MAAGgB,SAAH,EAAc;AACZ,wBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,MAAGD,IAAH,EAAQ;AACN,wBAAS,QAAC,KAAD,OAAWM,IAAX;AAAiB,MAAA,MAAM,EAAGrB,KAAD,iBAAY,QAAC,SAAD,OAAeA;AAAf;AAAA;AAAA;AAAA;AAAA;AAArC;AAAA;AAAA;AAAA;AAAA,YAAT;AACD,GAFD,MAEO;AACL,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;AAEF;;GAhDqBD,Y;;KAAAA,Y","sourcesContent":["import React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { UserContext } from './../hooks/UserContext';\nimport Loading from './../component/Loading/Loading';\nimport Cookies from 'js-cookie';\n\nconst url = 'http://localhost:3000';\n\n\nexport default function PrivateRoute(props) {\n\n  const verifyUser = ()  => {\n    const options = {\n      method: 'post',\n      credentials: 'include',\n      headers: {\n        'Content-type': 'application/x-www-form-urlencoded; charset=UTF-8'\n      },\n      body: `jwt=${Cookies.get('jwt')}`\n    }\n\n    fetch(url+\"/verifyUser\", options)\n    .then(response => {\n      if (!response.ok) {\n\n        return false;\n      }\n      return response\n    })\n    .then(response => response.json())\n    .then(data => {\n      if (data.valid) {\n        return true;\n      }\n    })\n  }\n\n\n  const { user, isLoading } = useContext(UserContext);\n\n\n\n  console.log(user, isLoading);\n\n  const { component: Component,\n    ...rest } = props;\n\n    if(isLoading) {\n      return <Loading/>\n    }\n\n    if(user){\n      return ( <Route {...rest} render={(props) => (<Component {...props}/>)}/>)\n    } else {\n      return <Redirect to='/'/>\n    }\n\n  }\n"]},"metadata":{},"sourceType":"module"}